
To Do for Javascribe: 

Processing bugs/tasks
	Maintain items per build
	When a build is modified by a component it must be re-initialized and its items reprocessed.
	It seems like when changing a handwritten Java file, there is an extra round of processing.
	Fail processing if there is a user file with same path as a generated file or vice versa.

Engine/Processing enhancements:
	Configurations should be able to handle env variables ("ENV.*").
	Implement logging standard.  Generated code should output errors to log.
	Add defaultVersion to BuildContext.addDependency(String)
	Task: Support for commands.txt in folders that have build components.
		Support a standing command that runs every time a build in that folder changes.
		Determine other commands to run
	Types should be available on a per-build-context basis instead of on a language basis.
		Maybe they should be available from build context instead of processor context.
		ProcessorContext would then have an API to retrieve another build context, to get types from another build context.
	Support for profiles in application, where a different javascribe.properties is used.
	Support for profiles in engine, where a different engine.poperties is used.

Pattern todo:
	Create SPA Host
		Includes embedded tomcat to serve HTML, JS, CSS and binary files
		/app -> render HTML and default page logic.
		/app/PageName -> show page on SPA
		/app/PageName/{pathParam} -> show page on SPA, with path param
		/app/PageName?param=x -> show page on SPA, with request param
		/app/PageName/{pathParam}/abc?param=x -> show page on SPA, with both path and request params
		Handles browser history, includes page navigation service in UI.
		Ability to add pages to navigation.
		Path parameters must be model properties on page.
		Request parameters are set as model properties on page.
		Page event 'show' is triggered when navigating to the page, after setting parameters.
		Page event 'hide' is triggered when navigating away from a page.

Pattern bugs/tasks
	HTML template if element directive - handling of event and elements inside of if block.
	Javascript parser doesn't handle strings properly.
	Embed Tomcat min/max threads
		tomcat.getConnector().setAttribute("maxThreads", 3);
		tomcat.getConnector().setAttribute("minThreads", 1);
	Embed Tomcat and DB-related configurations to connect to environment should be configurable from env variables.

	Javascript Module sourcefile: Prevent duplicate variable definitions in internal code.
		Create javascript variable, name/type/mode - const/let/function.  Have variables in source file.
	Bug: Javascript module client needs to read localdatetime properly and/or server needs to send it to client properly.
	HTML Template Parser returns a syntax error when template is empty.
	Retrieve Data rules.  Resolve list return types?
	EntityRelationship components to create search indexes in Dao types.
	Task: Build more defaults into processors, especially for dependency versions and Maven's Java version.
		Have MavenBuildProcessor default Java to version 17 or 19.
		Output WARN or INFO when using a default.
		EndpointProcessor should read request parameters as propertyList.
	Task: TableSet should take jdbc parameters as environment variable references.
	Task: Tomcat JNDI Datasource should take JDBC username, password, URL as environment variables.
	Task/Bug: HTTP Endpoint should understand return value properly and understand that the value makes sense in the code execution context.
		Maybe create a code execution context for the endpoint code section in the servlet.
	Task: Convert pattern XML files to use Lombok instead of explicit getters/setters
	Task: Evaluate organization and structure of wsClients XML.  See if it makes sense.
	Task: Analyze Liquibase usage, implement component pattern for it.  Integrate into Maven build.

