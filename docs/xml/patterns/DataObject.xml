<?xml version="1.0" encoding="ISO-8859-1"?>
<pattern xmlns="http://docs.javascribe.com/pattern"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://docs.javascribe.com/pattern ../../pattern.xsd"
name="Data Object" id="DataObject" priority="15000">

<description>
<span>
A data object is a POJO Java data object.  It will have getter and setter methods for 
all attributes defined, along with private instance variables for those attributes.
Attributes may be of any type that have been processed by the time this data object 
has been processed.
</span>
</description>

<attribute name="name" 
required="true"
example="UserDataObject"
>
<description>
<span>
The name of the data object to define, usually in upper camel format such as 
"DataObject".  This will become both the name of the data object class and the name of 
the type as referred to by other component definitions.
</span>
</description>
</attribute>

<attribute name="attributes" required="true"
example="userId,firstName,lastName,email"
>
<description>
<p>
A comma-separated list of attributes that this data object will have.  For each attribute,
the data object class will have a private member, a getter method and a setter method.
The attributes may be of any type that has already been defined.
</p>
<p>
Each attribute is specified as "&lt;name>:&lt;/type>" where the type is optional if 
"name" is already a system attribute.
</p>
</description>
</attribute>

<property required="true" 
name="net.sf.javascribe.patterns.dataobject.DataObject.pkg"
example="dataobj">
	<description>
<p>The package in which the Java file will be placed, under the package root of the 
application as defined for Java language support.
</p>
	</description>
	<validValue></validValue>
</property>

<output language="Java">
<p>
A Java data object with getters and setters for the attributes defined in the 
'attributes' XML attribute.  
</p>
</output>
<examples>
	<example desc="A typical data object with attribute types specified.">
		<explanation>
<p>This data object has three attributes: firstName, lastName and 
accountInfo.  For this to be valid, AccountInfo must be a valid type in 
the system (Perhaps a previously defined data object).</p>

		</explanation>
		<systemAttributes>
			<systemAttribute type="UserInfo" name="userInfo" desc="A user info object" />
			<systemAttribute type="list/UserInfo" name="userInfoList" desc="A java.util.List<UserInfo> with UserInfo as the element type" />
		</systemAttributes>
		<variableTypes>
			<variableType name="UserInfo" stereotype="AttributeHolder"/>
		</variableTypes>
		<generatedFiles>
			<file name="UserInfo.java">
<p>
The Java file for the UserInfo class.  It will have private member variables 
and "public void setFirstName(String firstName)" along with "public String getFirstName()".
</p>
<p>The package is defined by Java Support's root package, along with the 
property "net.sf.javascribe.patterns.dataobject.DataObject.pkg"</p>
			</file>
		</generatedFiles>
<span class='example'>
&lt;dataObject xmlns="http://javascribe.sf.net/patterns/data-object" name="UserInfo" attributes="firstName:string,lastName:string,accountInfo:AccountInfo" /&gt;
</span>
	</example>
</examples>

</pattern>

