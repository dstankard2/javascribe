
* JavascribeAgent: init
	Initialize component container and dependencies
		Create component container
		Register dependencies in component container
	Initialize plugin classes in PluginManager
		Initialize ComponentFileService
			Get XmlConfig classes from plugin service.
			Initialize JAXB context
		Initialize Language support in LanguageSupportService
			Get LanguageSupport classes from plugin service
		Initialize component patterns in PatternService
			Get classes that extend Component and BuildComponent
			Get classes that extend ComponentProcessor and BuildComponentProcessor
			Build ComponentPattern list.
		Initialize engine plugins (if running in agent mode) in PluginManager
			Get classes that extend EnginePlugin.
			Create EnginePlugin instances, check if each plugin is enabled.
				Initialize enabled engine plugins
	Initialize application data in WorkspaceManager
		Invoke workspaceManager to create ApplicationData instances

* JavascribeAgent: run

	Operation: Run application scans



JavascribeAgent: run application scans
For each application:
	perform scanApplication in WorkspaceManager
		Find resources removed/changed in folderScannerService
		Find resources changed/added in folderScannerService
		For each removed/changed file:
			
		For each changed/added resource:
			if it's jasper.properties or systemAttributes.properties then ignore
			If it's a user file:
				add to addedUserFiles
			If it's a component file
				calculate Component Items, add to toProcess in processing data.
				Add any build components to buildsToInit in processing data
		For each user file uf:
			For each folder watcher w:
				If uf is watched by w:
					reset originatorId of w
		For 


Add folder watcher in processorContext:
	
